services:

  db:
    image: postgres:17.5-alpine
    container_name: db
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1048
      - POSTGRES_DB=custom_randomizer_db
    ports:
      - 5432:5432

  api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=1048
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/custom-randomizer.pfx
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    container_name: custom-randomizer-api
    image: custom-randomizer-api
    command: ["dotnet", "watch", "run", "--project" , "custom-randomizer-api.csproj", "--urls", "http://*:8080;https://*:8081"]
    build:
      context: api
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ~/.aspnet/https:/https:ro
      - ./api:/src
      - /src/obj/ # <- directory won't be mounted
      - /src/bin/ # <- directory won't be mounted
    depends_on:
      - db

  client:
    build:
      context: client
      dockerfile: Dockerfile
    image: custom-randomizer-client
    container_name: "custom-randomizer-client"
    init: true
    volumes:
      - type: bind
        source: client
        target: /usr/src/app
      - type: volume
        target: /usr/src/app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - api

volumes:
  pgdata: